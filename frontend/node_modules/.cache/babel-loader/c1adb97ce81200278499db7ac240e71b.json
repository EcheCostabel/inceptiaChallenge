{"ast":null,"code":"import axios from 'axios';\nimport { URLS } from './Constants';\nvar axiosInstance = axios.create({\n  baseURL: URLS.defaultUrl,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\naxiosInstance.interceptors.request.use(function (config) {\n  var token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = \"JWT \".concat(token);\n  }\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","URLS","axiosInstance","create","baseURL","defaultUrl","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","error","Promise","reject"],"sources":["C:/Users/exequ/Desktop/ChallengeReactJSDev/ChallengeReactJSDev/frontend/src/axios.tsx"],"sourcesContent":["import axios from 'axios';\nimport { URLS } from './Constants';\n\n\nconst axiosInstance = axios.create({\n  baseURL: URLS.defaultUrl, \n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\naxiosInstance.interceptors.request.use(\n  config => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `JWT ${token}`;\n    }\n    return config;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n\nexport default axiosInstance;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,aAAa;AAGlC,IAAMC,aAAa,GAAGF,KAAK,CAACG,MAAM,CAAC;EACjCC,OAAO,EAAEH,IAAI,CAACI,UAAU;EACxBC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEFJ,aAAa,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACpC,UAAAC,MAAM,EAAI;EACR,IAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,UAAAC,MAAA,CAAUJ,KAAK,CAAE;EAC/C;EACA,OAAOD,MAAM;AACf,CAAC,EACD,UAAAM,KAAK,EAAI;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAed,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}