{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\exequ\\\\Desktop\\\\ChallengeReactJSDev\\\\ChallengeReactJSDev\\\\frontend\\\\src\\\\Login.tsx\";\nimport React from 'react';\nimport { Col, Container, Row } from \"reactstrap\";\nimport * as Yup from 'yup';\nimport logoIceptIA from './assets/inceptia.png';\nexport default function Login() {\n  var LoginSchema = Yup.object().shape({\n    email: Yup.string().email('Invalid email').required('Required'),\n    password: Yup.string().required('Required')\n  });\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"d-flex flex-column align-items-center justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"w-100 justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 6,\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoIceptIA,\n    alt: \"banner inceptia\",\n    className: \"img-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"names":["React","Col","Container","Row","Yup","logoIceptIA","Login","LoginSchema","object","shape","email","string","required","password","createElement","fluid","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","xs","md","src","alt"],"sources":["C:/Users/exequ/Desktop/ChallengeReactJSDev/ChallengeReactJSDev/frontend/src/Login.tsx"],"sourcesContent":["import React from 'react';\nimport { Col, Container, Row } from \"reactstrap\";\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport logoIceptIA from './assets/inceptia.png';\n\nexport default function Login() {\n\n  \n  const LoginSchema = Yup.object().shape({\n    email: Yup.string().email('Invalid email').required('Required'),\n    password: Yup.string().required('Required')\n  });\n\n  return (\n    <Container fluid className='d-flex flex-column align-items-center justify-content-center'>\n      <Row className='w-100 justify-content-center'>\n        <Col xs={12} md={6} className='text-center'>\n          <img src={logoIceptIA} alt='banner inceptia' className='img-fluid' />\n        </Col>\n      </Row>\n      <Row></Row>\n      \n    </Container>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,SAAS,EAAEC,GAAG,QAAQ,YAAY;AAEhD,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,OAAOC,WAAW,MAAM,uBAAuB;AAE/C,eAAe,SAASC,KAAKA,CAAA,EAAG;EAG9B,IAAMC,WAAW,GAAGH,GAAG,CAACI,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;IACrCC,KAAK,EAAEN,GAAG,CAACO,MAAM,CAAC,CAAC,CAACD,KAAK,CAAC,eAAe,CAAC,CAACE,QAAQ,CAAC,UAAU,CAAC;IAC/DC,QAAQ,EAAET,GAAG,CAACO,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,UAAU;EAC5C,CAAC,CAAC;EAEF,oBACEZ,KAAA,CAAAc,aAAA,CAACZ,SAAS;IAACa,KAAK;IAACC,SAAS,EAAC,8DAA8D;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACvFtB,KAAA,CAAAc,aAAA,CAACX,GAAG;IAACa,SAAS,EAAC,8BAA8B;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3CtB,KAAA,CAAAc,aAAA,CAACb,GAAG;IAACsB,EAAE,EAAE,EAAG;IAACC,EAAE,EAAE,CAAE;IAACR,SAAS,EAAC,aAAa;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzCtB,KAAA,CAAAc,aAAA;IAAKW,GAAG,EAAEpB,WAAY;IAACqB,GAAG,EAAC,iBAAiB;IAACV,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACjE,CACF,CAAC,eACNtB,KAAA,CAAAc,aAAA,CAACX,GAAG;IAAAc,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAM,CAED,CAAC;AAEhB","ignoreList":[]},"metadata":{},"sourceType":"module"}